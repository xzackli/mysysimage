precompile(Tuple{typeof(Base.deepcopy_internal), Any, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Module, String, Float64}, 1}, Tuple{Module, String, Float64}})
precompile(Tuple{typeof(Base._deleteat!), Array{Tuple{Module, String, Float64}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, Array{Tuple{Module, String, Float64}, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, Array{Tuple{Module, String, Float64}, 1}}, Int64, Int64})
precompile(Tuple{Type{Base.Dict{String, Base.PkgId}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, Revise.WatchList}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, Revise.WatchList}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Revise.WatchList}, Revise.WatchList, String})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, Base.PkgId}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, Base.PkgId}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Base.PkgId}, Base.PkgId, String})
precompile(Tuple{getfield(Revise, Symbol("#90#91")), Module, String})
precompile(Tuple{typeof(Revise.add_require), String, Module, String, String, Expr})
precompile(Tuple{getfield(Plots, Symbol("#279#312"))})
precompile(Tuple{typeof(Base.:(|)), Bool, Bool})
precompile(Tuple{typeof(REPL.Terminals.hascolor), REPL.Terminals.TTYTerminal})
precompile(Tuple{Revise.Rescheduler{typeof(Revise.revise_dir_queued), Tuple{String}}})
precompile(Tuple{Type{FileWatching.FileMonitor}, String})
precompile(Tuple{typeof(Base.preserve_handle), FileWatching.FileMonitor})
precompile(Tuple{typeof(FileWatching.start_watching), FileWatching.FileMonitor})
precompile(Tuple{typeof(Base.unpreserve_handle), FileWatching.FileMonitor})
precompile(Tuple{typeof(FileWatching.stop_watching), FileWatching.FileMonitor})
precompile(Tuple{typeof(Base.wait), FileWatching.FileMonitor})
precompile(Tuple{typeof(FileWatching.watch_file), String, Int64})
precompile(Tuple{Revise.Rescheduler{typeof(Revise.watch_manifest), Tuple{String}}})
precompile(Tuple{getfield(Revise, Symbol("#32#33")){String, Module, String, Base.PkgId}})
precompile(Tuple{getfield(Plots, Symbol("#249#282")), REPL.LineEditREPL})
precompile(Tuple{typeof(OhMyREPL.update_interface), REPL.LineEdit.ModalInterface})
precompile(Tuple{getfield(OhMyREPL, Symbol("#1#4")), REPL.LineEditREPL})
precompile(Tuple{getfield(REPL, Symbol("##setup_interface#45")), Bool, Any, typeof(REPL.setup_interface), REPL.LineEditREPL})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pair{Symbol, REPL.LineEdit.Prompt}, Vararg{Base.Pair{Symbol, REPL.LineEdit.Prompt}, N} where N})
precompile(Tuple{typeof(Base.peek), Base.IOStream})
precompile(Tuple{Type{Char}, Int32})
precompile(Tuple{typeof(Base.seekend), Base.IOStream})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, getfield(REPL.LineEdit, Symbol("#45#76"))}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{typeof(Base.convert), Type{Any}, Char})
precompile(Tuple{typeof(Base.convert), Type{Any}, REPL.LineEdit.KeyAlias})
precompile(Tuple{typeof(Base.convert), Type{Any}, Function})
precompile(Tuple{typeof(Base.convert), Type{Any}, Base.Dict{Char, Any}})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, getfield(REPL.LineEdit, Symbol("#74#105")){REPL.LineEdit.HistoryPrompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{Char, getfield(REPL, Symbol("#49#58")){REPL.LineEdit.Prompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, getfield(REPL.LineEdit, Symbol("#251#255")){REPL.LineEdit.PrefixHistoryPrompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{Char, getfield(REPL, Symbol("#39#42")){REPL.LineEdit.Prompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{typeof(Base.getindex), Array{REPL.LineEdit.TextInterface, 1}, Int64})
precompile(Tuple{typeof(Base.vect), Base.Dict{Any, Any}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Base.Dict{Any, Any}, Base.Dict{Char, Any}})
precompile(Tuple{Type{Array{Base.Dict{K, Any} where K, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Base.Dict{K, Any} where K, 1}, Tuple{Base.Dict{Any, Any}, Base.Dict{Char, Any}}})
precompile(Tuple{typeof(Base.reverse), Array{Base.Dict{K, Any} where K, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.reverse), Array{Base.Dict{K, Any} where K, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{Base.Dict{K, Any} where K, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(REPL.LineEdit.normalize_keys), Array{Base.Dict{K, Any} where K, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Dict{Any, Any}, 1}, Base.Dict{Any, Any}, Base.Generator{Array{Base.Dict{K, Any} where K, 1}, typeof(REPL.LineEdit.normalize_keys)}, Int64})
precompile(Tuple{typeof(Base._collect), Array{Base.Dict{K, Any} where K, 1}, Base.Generator{Array{Base.Dict{K, Any} where K, 1}, typeof(REPL.LineEdit.normalize_keys)}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Base.Dict{K, Any} where K, 1}, Base.Generator{Array{Base.Dict{K, Any} where K, 1}, typeof(REPL.LineEdit.normalize_keys)}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Base.Dict{Char, Any}, String})
precompile(Tuple{Type{Base.Pair{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}}, Any, Any})
precompile(Tuple{Type{Base.Pair{String, getfield(OhMyREPL, Symbol("#3#6")){REPL.LineEdit.PrefixHistoryPrompt}}}, Any, Any})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Pair{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Base.Pair{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Base.Pair{String, getfield(OhMyREPL, Symbol("#3#6")){REPL.LineEdit.PrefixHistoryPrompt}}}}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Any, Any}, Tuple{Base.Pair{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Base.Pair{String, getfield(OhMyREPL, Symbol("#3#6")){REPL.LineEdit.PrefixHistoryPrompt}}}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Tuple{Base.Pair{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Base.Pair{String, getfield(OhMyREPL, Symbol("#3#6")){REPL.LineEdit.PrefixHistoryPrompt}}}})
precompile(Tuple{Type{Base.Dict{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{String}, Type{getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Function, String})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Tuple{Base.Pair{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Base.Pair{String, getfield(OhMyREPL, Symbol("#3#6")){REPL.LineEdit.PrefixHistoryPrompt}}}, Int64})
precompile(Tuple{Type{Base.Dict{String, Function}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Type{String}, Type{Function}})
precompile(Tuple{typeof(Base.merge!), Base.Dict{String, Function}, Base.Dict{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, Function}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, Function}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Function}, Function, String})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{String, Function}, Tuple{Base.Pair{String, getfield(OhMyREPL, Symbol("#2#5")){REPL.LineEdit.PrefixHistoryPrompt}}, Base.Pair{String, getfield(OhMyREPL, Symbol("#3#6")){REPL.LineEdit.PrefixHistoryPrompt}}}, Int64})
precompile(Tuple{typeof(Base.vect), Base.Dict{String, Function}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Base.Dict{String, Function}, Base.Dict{Char, Any}})
precompile(Tuple{Type{Array{Base.Dict{K, V} where V where K, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Base.Dict{K, V} where V where K, 1}, Tuple{Base.Dict{String, Function}, Base.Dict{Char, Any}}})
precompile(Tuple{typeof(Base.reverse), Array{Base.Dict{K, V} where V where K, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.reverse), Array{Base.Dict{K, V} where V where K, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{Base.Dict{K, V} where V where K, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(REPL.LineEdit.normalize_keys), Array{Base.Dict{K, V} where V where K, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Dict{Any, Any}, 1}, Base.Dict{Any, Any}, Base.Generator{Array{Base.Dict{K, V} where V where K, 1}, typeof(REPL.LineEdit.normalize_keys)}, Int64})
precompile(Tuple{typeof(Base._collect), Array{Base.Dict{K, V} where V where K, 1}, Base.Generator{Array{Base.Dict{K, V} where V where K, 1}, typeof(REPL.LineEdit.normalize_keys)}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Base.Dict{K, V} where V where K, 1}, Base.Generator{Array{Base.Dict{K, V} where V where K, 1}, typeof(REPL.LineEdit.normalize_keys)}})
precompile(Tuple{typeof(Base._iterate), Base.Dict{String, Function}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Any}, REPL.REPLHistoryProvider})
precompile(Tuple{typeof(Base.:(==)), REPL.REPLDisplay{R} where R<:REPL.AbstractREPL, REPL.REPLDisplay{R} where R<:REPL.AbstractREPL})
precompile(Tuple{Type{REPL.LineEdit.PromptState}, REPL.Terminals.AbstractTerminal, REPL.LineEdit.Prompt, Base.GenericIOBuffer{Array{UInt8, 1}}, Symbol, Array{Base.GenericIOBuffer{Array{UInt8, 1}}, 1}, Int64, REPL.LineEdit.InputAreaState, Int64, Base.AbstractLock, Float64, Float64})
precompile(Tuple{typeof(REPL.LineEdit.init_state), Any, REPL.LineEdit.HistoryPrompt})
precompile(Tuple{typeof(REPL.LineEdit.init_state), Any, REPL.LineEdit.PrefixHistoryPrompt})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{Nothing}}, Ptr{Nothing}})
precompile(Tuple{typeof(REPL.LineEdit.refresh_multi_line), REPL.Terminals.UnixTerminal, Any})
precompile(Tuple{typeof(REPL.LineEdit.prompt_string), Function})
precompile(Tuple{typeof(REPL.LineEdit.prompt_string), AbstractString})
precompile(Tuple{getfield(REPL.LineEdit, Symbol("#22#23")){getfield(OhMyREPL.Prompt, Symbol("#2#27")), String}, Any, Any})
precompile(Tuple{typeof(OhMyREPL.Prompt.get_prompt), Any})
precompile(Tuple{typeof(Base.fill!), Array{Crayons.Crayon, 1}, Crayons.Crayon})
precompile(Tuple{typeof(OhMyREPL.apply_passes!), OhMyREPL.PassHandler, Array{Tokenize.Tokens.Token, 1}, Int64, Bool})
precompile(Tuple{typeof(OhMyREPL.Prompt.rewrite_with_ANSI), Any, Bool})
precompile(Tuple{getfield(OhMyREPL.Prompt, Symbol("#2#27")), Any, Any, Any})
precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.GenericIOBuffer{Array{UInt8, 1}}, Base.TTY})
precompile(Tuple{typeof(Base.write), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String})
precompile(Tuple{typeof(Base.getindex), Array{UInt8, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.unsafe_write), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.seekstart), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{Type{Tokenize.Lexers.Lexer{IO_t, T} where T<:Tokenize.Tokens.AbstractToken where IO_t<:IO}, Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Tokenize.Lexers.Lexer{Base.GenericIOBuffer{Array{UInt8, 1}}, Tokenize.Tokens.Token}, Base.HasEltype, Base.SizeUnknown})
precompile(Tuple{typeof(Base.collect), Tokenize.Lexers.Lexer{Base.GenericIOBuffer{Array{UInt8, 1}}, Tokenize.Tokens.Token}})
precompile(Tuple{OhMyREPL.Passes.SyntaxHighlighter.SyntaxHighlighterSettings, Array{Crayons.Crayon, 1}, Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{typeof(Base.to_index), Array{Int64, 1}, Nothing})
precompile(Tuple{typeof(Base.to_index), Array{Tokenize.Tokens.Kind, 1}, Nothing})
precompile(Tuple{typeof(OhMyREPL.Passes.BracketHighlighter.bracket_match), Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{OhMyREPL.Passes.BracketHighlighter.BracketHighlighterSettings, Array{Crayons.Crayon, 1}, Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{typeof(OhMyREPL.Passes.RainbowBrackets.get_color), OhMyREPL.Passes.RainbowBrackets.RainbowBracketsSettings, Tokenize.Tokens.Kind, Int64})
precompile(Tuple{OhMyREPL.Passes.RainbowBrackets.RainbowBracketsSettings, Array{Crayons.Crayon, 1}, Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{typeof(Base.map), getfield(Crayons, Symbol("#2#4")), Tuple{Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.map), getfield(Crayons, Symbol("#3#5")), Tuple{Int64, Int64, Int64}})
precompile(Tuple{typeof(Crayons.to_256_colors), Crayons.ANSIColor})
precompile(Tuple{typeof(Crayons._print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Crayons.Crayon})
precompile(Tuple{typeof(Crayons.to_system_colors), Crayons.ANSIColor})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Crayons.Crayon})
precompile(Tuple{typeof(OhMyREPL.untokenize_with_ANSI), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Crayons.Crayon, 1}, Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{typeof(OhMyREPL.untokenize_with_ANSI), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, OhMyREPL.PassHandler, Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{typeof(OhMyREPL.Prompt.refresh_multi_line), Any, Any, Any, Any, Any})
precompile(Tuple{getfield(Base, Symbol("#readline##kw")), NamedTuple{(:keep,), Tuple{Bool}}, typeof(Base.readline), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.max), Int64, Int64})
precompile(Tuple{typeof(Base.flush), REPL.Terminals.TTYTerminal})
precompile(Tuple{getfield(REPL.LineEdit, Symbol("#22#23")){getfield(OhMyREPL.BracketInserter, Symbol("#6#13")){Array{Char, 1}, Array{Char, 1}}, String}, Any, Any})
precompile(Tuple{typeof(OhMyREPL.BracketInserter.peek), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(REPL.LineEdit.edit_move_right), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(REPL.LineEdit.edit_backspace), REPL.LineEdit.PromptState})
precompile(Tuple{typeof(Base.to_index), Array{Char, 1}, Nothing})
precompile(Tuple{getfield(OhMyREPL.BracketInserter, Symbol("#6#13")){Array{Char, 1}, Array{Char, 1}}, REPL.LineEdit.MIState, REPL.LineEditREPL, String})
precompile(Tuple{getfield(REPL.LineEdit, Symbol("##edit_splice!#17")), Bool, typeof(REPL.LineEdit.edit_splice!), Any, Base.Pair{#s664, #s663} where #s663<:Integer where #s664<:Integer, AbstractString})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Int64, String, Vararg{Any, N} where N})
precompile(Tuple{getfield(REPL.LineEdit, Symbol("#22#23")){getfield(OhMyREPL.Prompt, Symbol("#22#47")), String}, Any, Any})
precompile(Tuple{typeof(OhMyREPL.enable_pass!), OhMyREPL.PassHandler, String, Bool})
precompile(Tuple{typeof(OhMyREPL.Prompt._commit_line), Any, Any, Any})
precompile(Tuple{typeof(REPL.LineEdit.setmark), REPL.LineEdit.MIState, Bool})
precompile(Tuple{typeof(REPL.LineEdit.setmark), REPL.LineEdit.MIState})
precompile(Tuple{typeof(REPL.LineEdit.set_action!), REPL.LineEdit.MIState, Symbol})
precompile(Tuple{typeof(REPL.LineEdit.edit_insert), REPL.LineEdit.MIState, Any})
precompile(Tuple{typeof(REPL.LineEdit.edit_insert), REPL.LineEdit.PromptState, Any})
precompile(Tuple{getfield(OhMyREPL.Prompt, Symbol("#22#47")), Any, Any, Any})
precompile(Tuple{typeof(Base.isempty), Base.SubString{String}})
precompile(Tuple{typeof(Base.convert), Type{Any}, REPL.LineEdit.Prompt})
precompile(Tuple{typeof(REPL.LineEdit.state), REPL.LineEdit.MIState, Any})
precompile(Tuple{typeof(Base.convert), Type{Any}, REPL.LineEdit.PromptState})
precompile(Tuple{typeof(Base.convert), Type{Any}, REPL.LineEdit.HistoryPrompt})
precompile(Tuple{typeof(Base.convert), Type{Any}, REPL.LineEdit.SearchState})
precompile(Tuple{typeof(Base.convert), Type{Any}, REPL.LineEdit.PrefixHistoryPrompt})
precompile(Tuple{typeof(Base.convert), Type{Any}, REPL.LineEdit.PrefixSearchState})
precompile(Tuple{typeof(REPL.LineEdit.deactivate), REPL.LineEdit.TextInterface, REPL.LineEdit.ModeState, Any, REPL.Terminals.TextTerminal})
precompile(Tuple{typeof(REPL.LineEdit.refresh_multi_line), REPL.Terminals.TerminalBuffer, REPL.LineEdit.ModeState})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Tokenize.Tokens.Kind, Symbol}, Tokenize.Tokens.Kind})
precompile(Tuple{getfield(REPL.LineEdit, Symbol("#22#23")){getfield(OhMyREPL.BracketInserter, Symbol("#1#8")){Array{Char, 1}, Char, Char}, String}, Any, Any})
precompile(Tuple{typeof(REPL.LineEdit.edit_move_left), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{getfield(OhMyREPL.BracketInserter, Symbol("#1#8")){Array{Char, 1}, Char, Char}, REPL.LineEdit.MIState, REPL.LineEditREPL, Vararg{Any, N} where N})
precompile(Tuple{typeof(REPL.LineEdit.edit_splice!), Any, Base.Pair{#s664, #s663} where #s663<:Integer where #s664<:Integer, AbstractString})
precompile(Tuple{getfield(REPL.LineEdit, Symbol("#22#23")){getfield(OhMyREPL.BracketInserter, Symbol("#5#12")){Char}, String}, Any, Any})
precompile(Tuple{getfield(OhMyREPL.BracketInserter, Symbol("#5#12")){Char}, REPL.LineEdit.MIState, REPL.LineEditREPL, Vararg{Any, N} where N})
precompile(Tuple{getfield(REPL.LineEdit, Symbol("#22#23")){getfield(OhMyREPL.Prompt, Symbol("#14#39")), String}, Any, Any})
precompile(Tuple{getfield(OhMyREPL.Prompt, Symbol("#14#39")), Any, Any, Any})
precompile(Tuple{getfield(REPL.LineEdit, Symbol("#22#23")){getfield(OhMyREPL.BracketInserter, Symbol("#2#9")){Char}, String}, Any, Any})
precompile(Tuple{getfield(OhMyREPL.BracketInserter, Symbol("#2#9")){Char}, REPL.LineEdit.MIState, REPL.LineEditREPL, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Multimedia.display), REPL.REPLDisplay{R} where R<:REPL.AbstractREPL, Any})
precompile(Tuple{typeof(Base.Multimedia.display), REPL.REPLDisplay{REPL.LineEditREPL}, Base.Multimedia.MIME{Symbol("text/plain")}, Int64})
precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, REPL.Terminals.TTYTerminal, Base.Pair{Symbol, Bool}})
precompile(Tuple{getfield(REPL.LineEdit, Symbol("#22#23")){getfield(OhMyREPL.Prompt, Symbol("#25#50")), String}, Any, Any})
precompile(Tuple{typeof(REPL.LineEdit.complete_line), REPL.LineEdit.MIState})
precompile(Tuple{getfield(OhMyREPL.Prompt, Symbol("#25#50")), Any, Any, Any})
precompile(Tuple{typeof(Base.put_buffered), Base.Channel{Any}, Tuple{typeof(Main.f), Bool}})
precompile(Tuple{typeof(Base.put_unbuffered), Base.Channel{Any}, Tuple{typeof(Main.f), Bool}})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{typeof(Main.f), Bool}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{typeof(Main.f), Bool}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{typeof(Main.f), Bool}, Int64, Int64})
precompile(Tuple{typeof(Base.Multimedia.display), REPL.REPLDisplay{REPL.LineEditREPL}, Base.Multimedia.MIME{Symbol("text/plain")}, Function})
precompile(Tuple{typeof(Base.methods), Any})
precompile(Tuple{getfield(REPL, Symbol("#47#56")){Base.IOStream}, Any})
precompile(Tuple{typeof(FileWatching.uvfinalize), FileWatching.FileMonitor})
